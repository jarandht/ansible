- hosts: "{{ hosts }}"
  become: yes
  vars:
    required_packages:
      - qemu-guest-agent
  tasks:
    - name: upgrade apt packages
      become: true
      apt:
        upgrade: yes
        update_cache: yes

    - name: Gather package facts
      package_facts:

    - name: Ensure required packages are installed
      apt:
        name: "{{ item }}"
        state: present
        update_cache: yes
      loop: "{{ required_packages }}"
      when: item not in ansible_facts.packages
      register: apt_install_result
      become: true

    - name: Log installed packages
      debug:
        msg: "Installed {{ item.item }} successfully."
      when: item.changed
      loop: "{{ apt_install_result.results }}"

    - name: check if system reboot is required
      become: true
      stat:
        path: /var/run/reboot-required
      register: reboot_required

    - name: Reboot non essential server
      ansible.builtin.reboot:
        msg: "Reboot initiated by Ansible"
        connect_timeout: 5
        reboot_timeout: 600
        pre_reboot_delay: 0
        post_reboot_delay: 30
      when: reboot_required.stat.exists and inventory_hostname not in groups['reboot_excluded'] and inventory_hostname not in groups['reboot_individually']
      
    - name: Reboot HA servers
      ansible.builtin.reboot:
        msg: "Reboot initiated by Ansible"
        connect_timeout: 5
        reboot_timeout: 600
        pre_reboot_delay: 0
        post_reboot_delay: 30
      when: reboot_required.stat.exists and inventory_hostname in groups['reboot_individually']
      serial: 1
      
    # Send Discord message when reboot is required
#    - name: Send Discord message
#      uri:
#        url: "{{ discord_webhook_url }}"
#       method: POST
#        body_format: json
#        body: '{"content": "Reboot required on {{ inventory_hostname }}"}'
#        headers:
#          Content-Type: application/json
#        status_code: 204
#      when: reboot_required.stat.exists and inventory_hostname in groups['reboot_excluded']

    - name: Send Teams message
      uri:
        url: "{{ teams_webhook_url }}"
        method: POST
        body_format: json
        body:
          text: "Reboot required on {{ inventory_hostname }}"
        headers:
          Content-Type: application/json
        status_code: 200
      when: reboot_required.stat.exists and inventory_hostname in groups['reboot_excluded']
